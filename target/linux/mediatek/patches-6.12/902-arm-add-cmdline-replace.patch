Subject: [PATCH] mediatek: add kernel cmdline replacement hack

Add kernel command line replacement hack to mediatek. Now we can
find and replace arguments in the kernel command line by setting
different device tree option in chosen/bootargs-find and replace.

This hack is used to replace a kernel argument at early-boot for
the boards where u-boot sets bootargs, and is need to be identified and replaced.

Signed-off-by: Rhnn Hur <hurrhnn@icmp.kr>
---
 drivers/of/fdt.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

--- a/drivers/of/fdt.c
+++ b/drivers/of/fdt.c
@@ -1014,10 +1014,33 @@ int __init early_init_dt_scan_memory(voi
 	return found_memory;
 }
 
+static char *string_replace(char *str, const char *old, const char *new, size_t strlenmax) {
+	const size_t olen = strlen(old), nlen = strlen(new);
+	char *p = strstr(str, old);
+	char *op, *np;
+
+	if (p == NULL)
+		return str;
+
+	op = p + olen;
+	np = p + nlen;
+
+	if (olen != nlen) {
+		if(np + strlen(op) - str > strlenmax)
+			return str;
+		memmove(np, op, strlen(op) + 1);
+	}
+
+	if(np - str <= strlenmax)
+		memcpy(p, new, nlen);
+	return str;
+}
+
 int __init early_init_dt_scan_chosen(char *cmdline)
 {
 	int l, node;
 	const char *p;
+	const char *old, *new;
 	const void *rng_seed;
 	const void *fdt = initial_boot_params;
 
@@ -1063,6 +1086,12 @@ int __init early_init_dt_scan_chosen(cha
 	if (p != NULL && l > 0)
 		strscpy(cmdline, p, min((int)l, COMMAND_LINE_SIZE));
 #endif
+	old = of_get_flat_dt_prop(node, "bootargs-find", &l);
+	if (old != NULL && l > 0) {
+		new = of_get_flat_dt_prop(node, "bootargs-replace", &l);
+		if (new != NULL && l > 0)
+			string_replace(cmdline, old, new, COMMAND_LINE_SIZE);
+	}
 
 handle_cmdline:
 	/*
